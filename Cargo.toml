[workspace]

members = ["derive", "xtask"]

resolver = "3"

package.edition = "2024"

# MSRV 1.87 needed for const Vec::len
# Remember to adjust `.github/workflows/ci.yml` and `tests/integration.rs` when changing this
package.rust-version = "1.87"

# Remember to update `[workspace.dependencies]` versions below aswell
package.version = "0.2.1"

package.license = "MIT OR Apache-2.0"
package.authors = ["Christian Schwarz <cmrs@cmrs.io>"]
package.repository = "https://github.com/cmrschwarz/indexland"
package.categories = ["data-structures", "memory-management", "rust-patterns"]
package.keywords = ["index", "collection", "container", "vec", "slice"]


[workspace.dependencies]
# versions must match the package.version specified above
indexland = { version = "=0.2.1", path = ".", default-features = false }
indexland_derive = { version = "=0.2.1", path = "./derive", default-features = false }


[package]
name = "indexland"

version.workspace = true
license.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

description = "Newtype Indices for Rust Collection Types"

[lib]
name = "indexland"

[dependencies.indexland_derive]
workspace = true
optional = true
default-features = false

[dependencies.arrayvec]
version = "0.7"
optional = true
default-features = false

[dependencies.smallvec]
version = "1.15"
optional = true
default-features = false
features = ["const_new"]

[dependencies.indexmap]
version = "2.9"
optional = true
default-features = false

[dependencies.slab]
# we need 0.4.10 for Slab::get_disjoint_mut
version = "0.4.10"
optional = true
default-features = false

[dependencies.serde]
version = "1.0"
optional = true
default-features = false


[dev-dependencies]
trybuild = "1.0"
rustversion = "1.0"
indexland = { workspace = true, features = ["derive"] }

[features]
default = ["std", "derive"]

full = [
    "alloc",
    "std",
    "derive",
    "nonmax",
    "arrayvec",
    "smallvec",
    "indexmap",
    "slab",
    "serde",
]

# Enables `#[derive(Idx)]`.
# Unlike e.g. serde, this is by far the preferred way to use indexland,
# so it is part of the default features. If you have to, you can disable this
# and use the less customizable `idx_newtype!` or implement the
# `Idx` trait manually.
derive = ["dep:indexland_derive"]

# Enables the builtin `NonMax` integer types. These bring in a fair bit of
# code due to need to implement a lot of traits,
# so this feature is not enabled by default.
nonmax = []

# By default, the `NonMax` Niche optimizations are disabled in debug mode,
# because they prevent gdb / lldb from displaying index values correctly.
# If your crate fundamentally relies on the niche optimiziation to
# be present you can disable this behavior here. Be aware that this will
# also affect all your downstream consumers, as feature flags are viral.
disable_debuggable_nonmax = []

# Allow indexland to use the alloc crate. Only meaningful in a #[no_std] context.
# Without this flag, only the `IndexSlice`, `IndexArray`, and `IndexArrayVec`
# containers will be available.
alloc = []

# Adds a few additional goodies like the `Error` implementation on
# `nonmax::NonMaxOutOfRangeError`. Enabled by default. Disable for #[no_std].
std = ["alloc", "arrayvec/std", "indexmap/std"]

# A small size optimized vec implementation. An optimization for those that
# need it, not enabled by default.
# smallvec v1 unfortunately doesn't support `#[no_std]`, v2 isn't out yet.
smallvec = ["std", "dep:smallvec"]

# An array based vec implementation with no heap allocations.
arrayvec = ["dep:arrayvec"]

# An array based hashmap implementation that preserves insertion order.
indexmap = ["alloc", "dep:indexmap"]

# Simple Slab allocator.
slab = ["alloc", "dep:slab"]


# serde Serialize/Deserialize implementations for all containers.
serde = ["dep:serde", "arrayvec?/serde", "smallvec?/serde", "indexmap?/serde", "slab?/serde"]

[package.metadata.docs.rs]
features = ["full"]
rustdoc-args = [
    "--sort-modules-by-appearance",
    # link to stable instead of nightly
    "--generate-link-to-definition",
    "--extern-html-root-url=core=https://doc.rust-lang.org",
    "--extern-html-root-url=alloc=https://doc.rust-lang.org",
    "--extern-html-root-url=std=https://doc.rust-lang.org",
]

[[example]]
name = "doubly_linked_list"
required-features = ["derive", "std", "nonmax"]

[[example]]
name = "graph_a_star"
required-features = ["derive", "std", "nonmax"]

[[example]]
name = "iteration"
required-features = ["derive"]
